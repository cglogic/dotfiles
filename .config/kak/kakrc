set-option global makecmd 'make'
set-option global grepcmd 'ag --column'
set-option global clang_options '-std=c++14'
set-option global ui_options 'ncurses_status_on_top=true' 'ncurses_assistant=none' 'ncurses_change_colors=true' 'ncurses_enable_mouse=false'
#set-option global autoinfo normal|command|onkey

set-option global indentwidth 0

colorscheme tomorrow-night

add-highlighter global/ number-lines -hlcursor -separator ' '
add-highlighter global/ show-matching
#add-highlighter global/ show-whitespaces
add-highlighter global/ dynregex '%reg{/}' 0:+u

set-option global auto_complete prompt
hook global InsertBegin .* %{ map window insert <a-space> <c-o> }
hook global InsertEnd .* %{ unmap window insert <a-space> <c-o> }

hook global InsertCompletionShow .* %{ map window insert <tab> <c-n>; map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p>; execute-keys <c-o> }

hook global WinSetOption filetype=(c|cpp) %{
	clang-enable-autocomplete
	clang-enable-diagnostics
	alias window lint clang-parse
	alias window lint-next-error clang-diagnostics-next
}

map global normal '#' :comment-line<ret>

# map global normal = ':prompt math: %{exec "a%val{text}<lt>esc>|bc<lt>ret>"}<ret>'

# %sh{
# 	copy="xclip -i"; paste="xclip -o" ;;

# 	printf "map global user -docstring 'paste (after) from clipboard' p '!%s<ret>'\n" "$paste"
# 	printf "map global user -docstring 'paste (before) from clipboard' P '<a-!>%s<ret>'\n" "$paste"
# 	printf "map global user -docstring 'yank to clipboard' y '<a-|>%s<ret>:echo -markup %%{{Information}copied selection to X11 clipboard}<ret>'\n" "$copy"
# 	printf "map global user -docstring 'replace from clipboard' R '|%s<ret>'\n" "$paste"
# }

#eval %sh{kak-lsp --kakoune -s $kak_session}
