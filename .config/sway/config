# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
set $fname JetBrains Mono
set $fsize 18
set $f2size `echo $fsize + 4 | bc`
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu FNAME="$fname:size=$fsize" sdmenu | xargs swaymsg exec --
set $menu lockf -s -t 0 $XDG_RUNTIME_DIR/single-menu.lock foot --window-size-pixels=1280x720 --title=launcher --app-id=launcher ~/.local/bin/launch

set $WOBSOCK $XDG_RUNTIME_DIR/wob.sock

workspace_layout tabbed

gaps inner 0
gaps outer 0
smart_borders on
# hide_edge_borders --i3 smart
default_border pixel 2
default_floating_border pixel 2
titlebar_border_thickness 1
titlebar_padding 5 1

# for_window [app_id="[.]*"] floating disable

# floating_maximum_size 1280 x 720
# floating_minimum_size 1280 x 720
# focus_follows_mouse no

# for_window [app_id="chrome"] resize set 1280 720
for_window [app_id="launcher"] floating enable, sticky enable
for_window [app_id="chromium-browser"] inhibit_idle fullscreen

# include themes/base16-tomorrow-night.config

# # Basic color configuration using the Base16 variables for windows and borders.
# # Property Name         Border  BG      Text    Indicator Child Border
# client.focused          $base05 $base0D $base00 $base0D $base0D
# client.focused_inactive $base01 $base01 $base05 $base03 $base01
# client.unfocused        $base01 $base00 $base05 $base01 $base01
# client.urgent           $base08 $base08 $base00 $base08 $base08
# client.placeholder      $base00 $base00 $base05 $base00 $base00
# client.background       $base07

###
font "$fname $fsize"

###
seat * xcursor_theme "OpenZone_Ice"

###
seat * hide_cursor 5000

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/local/share/backgrounds/sway/)
output * bg ~/wallpapers/bg-orig.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
# output * adaptive_sync on
# output eDP-1 disable
# output eDP-1 mode 1920x1080@60Hz

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

exec swayidle -w timeout 600 'swaymsg "output * power off"; doas /root/idleon' resume 'doas /root/idleoff; swaymsg "output * power on"'

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input type:touchpad {
    dwt disabled
    tap enabled
    # natural_scroll enabled
    middle_emulation enabled
}

input type:keyboard {
    repeat_delay 250
    repeat_rate 50
    xkb_layout "us,ru"
    # xkb_options "grp:caps_toggle"
    # xkb_options "grp:win_space_toggle"
    xkb_options "grp:alt_shift_toggle"
}

### Key bindings
#
# Basics:
#
    # bindsym --to-code --no-repeat Super_L fullscreen
    # bindsym --release --to-code --no-repeat Super_L fullscreen

    #
    # bindsym --to-code $mod+backslash exec ls ~/.local/bin | bemenu -n --fn="$fname $f2size" --prompt="❯" --tb="#323232" --tf="#4c7899" --nb="#323232" --nf="#dddddd" --fb="#323232" --ff="#dddddd" --sb="#323232" --sf="#dddddd" --hb="#285577" --hf="#dddddd" | xargs swaymsg exec --

    #
    # bindsym --to-code $mod+BackSpace exec 'grim $XDG_RUNTIME_DIR/screenshot.png ; convert -scale 10% -blur 0x2.5 -resize 1000% $XDG_RUNTIME_DIR/screenshot.png $XDG_RUNTIME_DIR/screenshotblur.png ; swaylock -c 131313 --font="$fname" --font-size=$fsize --indicator-radius=100 --daemonize -i $XDG_RUNTIME_DIR/screenshotblur.png -f ; rm $XDG_RUNTIME_DIR/screenshot.png'
    bindsym --to-code $mod+Delete exec swaylock -c 131313 --font="$fname" --font-size=$f2size --indicator-radius=100 --daemonize -i "~/wallpapers/bg-orig.png" -f

    # Disable touchpad
    bindsym --to-code Print exec lockf -s -t 0 $XDG_RUNTIME_DIR/single-touchpad.lock swaymsg input type:touchpad events toggle enabled disabled >/dev/null 2>&1

    # Screenshot
    bindsym --to-code $mod+p exec grim ~/.screenshots/screenshot-$(date +%Y.%m.%d-%H.%M.%S).png

    # Chromium
    # bindsym --to-code $mod+g fullscreen disable, exec lockf -s -t 0 $XDG_RUNTIME_DIR/single-browser.lock ~/.local/bin/browser

    # Telegram
    # bindsym --to-code $mod+t fullscreen disable, exec lockf -s -t 0 $XDG_RUNTIME_DIR/single-telegram.lock telegram-desktop

    # Start a terminal
    bindsym --to-code $mod+Return fullscreen disable, exec $term

    # Kill focused window
    # bindsym --to-code $mod+Shift+q kill
    bindsym --to-code $mod+BackSpace kill

    # Start your launcher
    # bindsym --to-code $mod+grave exec swaymsg -q fullscreen disable, exec $menu
    bindsym --to-code $mod+grave fullscreen disable, exec $menu

    # Make the current focus fullscreen
    # bindsym --to-code Super_L fullscreen
    # bindsym --to-code Super_R fullscreen

    bindsym --to-code XF86WakeUp workspace next
    # bindsym --to-code $mod+Tab focus right
    bindsym --to-code $mod+Tab workspace next

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym --to-code $mod+Escape exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym --to-code $mod+Escape exec swaymsg exit

    bindsym --to-code $mod+F1 exec mixer -S pcm 0 && pgrep wob > /dev/null && test -p $WOBSOCK && mixer -S pcm | cut -f 3 -d ':' > $WOBSOCK
    bindsym --to-code $mod+F2 exec mixer -S pcm -10 && pgrep wob > /dev/null && test -p $WOBSOCK && mixer -S pcm | cut -f 3 -d ':' > $WOBSOCK
    bindsym --to-code $mod+F3 exec mixer -S pcm +10 && pgrep wob > /dev/null && test -p $WOBSOCK && mixer -S pcm | cut -f 3 -d ':' > $WOBSOCK
    bindsym --to-code $mod+F4 exec pgrep wob > /dev/null && test -p $WOBSOCK && mixer -S pcm | cut -f 3 -d ':' > $WOBSOCK

    bindsym --to-code $mod+F5 exec backlight decr && pgrep wob > /dev/null && test -p $WOBSOCK && backlight -q > $WOBSOCK
    bindsym --to-code $mod+F6 exec backlight incr && pgrep wob > /dev/null && test -p $WOBSOCK && backlight -q > $WOBSOCK
    bindsym --to-code $mod+F7 exec backlight 50 && pgrep wob > /dev/null && test -p $WOBSOCK && backlight -q > $WOBSOCK
    bindsym --to-code $mod+F8 exec pgrep wob > /dev/null && test -p $WOBSOCK && backlight -q > $WOBSOCK

    bindsym --to-code $mod+F9 exec pgrep wob > /dev/null && test -p $WOBSOCK && acpiconf -i 0 | grep 'Remaining capacity' | tr -s '[:blank:]' '%' | cut -f 3 -d '%' > $WOBSOCK
    bindsym --to-code $mod+F10 exec pgrep wob > /dev/null && test -p $WOBSOCK && sysctl dev.cpu | grep temperature | tr -s '[:blank:]' '.' | cut -f 5 -d '.' | tr -s '\n' ' ' | cut -f 1 -d ' ' > $WOBSOCK
    bindsym --to-code $mod+F12 exec ylight
#
# Moving around:
#
    # Move your focus around
    bindsym --to-code $mod+$left focus left
    bindsym --to-code $mod+$down focus down
    bindsym --to-code $mod+$up focus up
    bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym --to-code $mod+1 workspace number 1
    bindsym --to-code $mod+2 workspace number 2
    bindsym --to-code $mod+3 workspace number 3
    bindsym --to-code $mod+4 workspace number 4
    bindsym --to-code $mod+5 workspace number 5
    bindsym --to-code $mod+6 workspace number 6
    bindsym --to-code $mod+7 workspace number 7
    bindsym --to-code $mod+8 workspace number 8
    bindsym --to-code $mod+9 workspace number 9
    bindsym --to-code $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym --to-code $mod+Shift+1 move container to workspace number 1
    bindsym --to-code $mod+Shift+2 move container to workspace number 2
    bindsym --to-code $mod+Shift+3 move container to workspace number 3
    bindsym --to-code $mod+Shift+4 move container to workspace number 4
    bindsym --to-code $mod+Shift+5 move container to workspace number 5
    bindsym --to-code $mod+Shift+6 move container to workspace number 6
    bindsym --to-code $mod+Shift+7 move container to workspace number 7
    bindsym --to-code $mod+Shift+8 move container to workspace number 8
    bindsym --to-code $mod+Shift+9 move container to workspace number 9
    bindsym --to-code $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym --to-code $mod+b splith
    bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+s layout stacking
    bindsym --to-code $mod+w layout tabbed
    bindsym --to-code $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym --to-code $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
bindsym --to-code $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    # mode hide
    position bottom
    height 37
    gaps 0
    status_edge_padding 0
    status_padding 0

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %H:%M:%S'; do sleep 1; done
    status_command statusd
    # status_command while ~/.config/sway/status.sh; do sleep 1; done

    colors {
        statusline #eeeeee
        background #323232
        # inactive_workspace #32323200 #32323200 #5c5c5c
    }

    # colors {
    #     background $base00
    #     separator  $base01
    #     statusline $base04

    #     # State             Border  BG      Text
    #     focused_workspace   $base05 $base0D $base00
    #     active_workspace    $base05 $base03 $base00
    #     inactive_workspace  $base03 $base01 $base05
    #     urgent_workspace    $base08 $base08 $base00
    #     binding_mode        $base00 $base0A $base00
    # }

    font "$fname $fsize"
}

# exec dbus-daemon --session --address=unix:path=$XDG_RUNTIME_DIR/bus
# exec dbus-launch --sh-syntax --exit-with-session sway
# exec mako

# set $gnome-schema org.gnome.desktop.interface

# exec_always {
#     gsettings set $gnome-schema gtk-theme 'Adwaita'
#     gsettings set $gnome-schema icon-theme 'Faenza'
#     gsettings set $gnome-schema cursor-theme 'OpenZone_Ice'
#     gsettings set $gnome-schema font-name 'Clear Sans 14'
# }

# Start wob
exec "WOBPID=$(ps -x -o 'pgid' -p `pgrep -f $WOBSOCK` 2>/dev/null | tail +2) ; pkill -SIGINT -g $WOBPID 2>/dev/null ; rm -f $WOBSOCK ; mkfifo $WOBSOCK && tail -f $WOBSOCK | wob"

# Launch terminal
exec $term

# Update database
# exec ~/.local/bin/launch update

include /usr/local/etc/sway/config.d/*
