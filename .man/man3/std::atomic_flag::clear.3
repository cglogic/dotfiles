.TH std::atomic_flag::clear 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic_flag::clear \- std::atomic_flag::clear

.SH Synopsis
   Defined in header <atomic>
   void clear( std::memory_order order = std::memory_order_seq_cst )  \fB(1)\fP \fI(since C++11)\fP
   volatile;
   void clear( std::memory_order order = std::memory_order_seq_cst ); \fB(2)\fP \fI(since C++11)\fP

   Atomically changes the state of a std::atomic_flag to clear (false).

.SH Parameters

           the memory synchronization ordering for this operation (cannot be
   order - std::memory_order_consume, std::memory_order_acquire, or
           std::memory_order_acq_rel)

.SH Exceptions

   noexcept specification:
   noexcept

.SH See also

                              atomically sets the flag to true and obtains its previous
   test_and_set               value
                              \fI(public member function)\fP
   atomic_flag_clear
   atomic_flag_clear_explicit atomically sets the value of the flag to false
   \fI(C++11)\fP                    \fI(function)\fP
   \fI(C++11)\fP
   memory_order               defines memory ordering constraints for the given atomic
   \fI(C++11)\fP                    operation
                              \fI(typedef)\fP

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
