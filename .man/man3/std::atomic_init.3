.TH std::atomic_init 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::atomic_init \- std::atomic_init

.SH Synopsis
   Defined in header <atomic>
   template< class T >                                           \fI(since C++11)\fP
   void atomic_init( std::atomic<T>* obj, T desired );
   template< class T >                                           \fI(since C++11)\fP
   void atomic_init( volatile std::atomic<T>* obj, T desired );

   Initializes the default-constructed atomic object obj with the value desired. The
   function is not atomic: concurrent access from another thread, even through an
   atomic operation, is a data race.

   If obj was not default-constructed, the behavior is undefined.

   If this function is called twice on the same obj, the behavior is undefined.

.SH Parameters

   obj     - pointer to an atomic object to initialize
   desired - the value to initialize atomic object with

.SH Return value

   \fI(none)\fP

.SH Exceptions

   noexcept specification:
   noexcept

.SH Notes

   This function is provided for compatibility with C. If the compatibility is not
   required, std::atomic may be initialized through their non-default constructors.

.SH Example

    This section is incomplete
    Reason: no example

.SH See also

   ATOMIC_VAR_INIT constant initialization of an atomic variable of static storage
   \fI(C++11)\fP         duration
                   \fI(function macro)\fP
   constructor     constructs an atomic object
                   \fI(public member function of std::atomic)\fP
   C documentation for
   atomic_init

   Categories:

     * unconditionally noexcept
     * Todo no example

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
