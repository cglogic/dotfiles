.TH std::experimental::ranges::ConvertibleTo 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::experimental::ranges::ConvertibleTo \- std::experimental::ranges::ConvertibleTo

.SH Synopsis
   Defined in header <experimental/ranges/concepts>
   template < class T, class U >                             (ranges TS)
   concept bool ConvertibleTo() { return /* see below */; }

   The concept ConvertibleTo<T, U>() is satisfied if and only if std::is_convertible<T,
   U>::value is true.

.SH Notes

   Despite the use of std::is_convertible in its description, ConvertibleTo is not
   required to use it in its implementation. Thus, ConvertibleTo<T, U>() may not
   normalize tostd::is_convertible<T, U>::value during partial ordering of constraints.

.SH See also

   is_convertible checks if a type can be converted to the other type
   \fI(C++11)\fP        \fI(class template)\fP
