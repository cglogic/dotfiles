.TH std::forward_list::empty 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::forward_list::empty \- std::forward_list::empty

.SH Synopsis
   bool empty() const;  \fI(since C++11)\fP

   Checks if the container has no elements, i.e. whether begin() == end().

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if the container is empty, false otherwise

.SH Exceptions

   noexcept specification:
   noexcept

.SH Complexity

   Constant.

.SH Example

   The following code uses empty to check if a std::forward_list<int> contains any
   elements:

   
// Run this code

 #include <forward_list>
 #include <iostream>

 int main()
 {
     std::forward_list<int> numbers;
     std::cout << "Initially, numbers.empty(): " << numbers.empty() << '\\n';

     numbers.push_front(42);
     numbers.push_front(13317);
     std::cout << "After adding elements, numbers.empty(): " << numbers.empty() << '\\n';
 }

.SH Output:

 Initially, numbers.empty(): 1
 After adding elements, numbers.empty(): 0

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
