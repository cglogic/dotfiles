.TH std::iswdigit 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::iswdigit \- std::iswdigit

.SH Synopsis
   Defined in header <cwctype>
   int iswdigit( wint_t ch );

   Checks if the given wide character corresponds (if narrowed) to one of the ten
   decimal digit characters 0123456789.

.SH Parameters

   ch - wide character

.SH Return value

   Non-zero value if the wide character is an numeric character, zero otherwise.

.SH Notes

   std::iswdigit and std::iswxdigit are the only standard wide character classification
   functions that are not affected by the currently installed C locale.

.SH Example

   Some locales offer additional character classes that detect non-ASCII digits

   
// Run this code

 #include <iostream>
 #include <cwctype>
 #include <clocale>
 void test(wchar_t a3, wchar_t u3, wchar_t j3)
 {
     std::wcout << std::boolalpha
                << "          '" << a3 << "'   '" << u3 << "'  '" << j3  << "'\\n"
                << "iswdigit "
                << (bool)std::iswdigit(a3) << "  "
                << (bool)std::iswdigit(u3) << " "
                << (bool)std::iswdigit(j3) << '\\n'
                << "jdigit:  "
                << (bool)std::iswctype(a3, std::wctype("jdigit")) << ' '
                << (bool)std::iswctype(u3, std::wctype("jdigit")) << ' '
                << (bool)std::iswctype(j3, std::wctype("jdigit")) << '\\n';
 }
 int main()
 {
     wchar_t a3 = L'3';  // the ASCII digit 3
     wchar_t u3 = L'三'; // the CJK numeral 3
     wchar_t j3 = L'３'; // the fullwidth digit 3

     std::setlocale(LC_ALL, "en_US.utf8");
     std::wcout << "In american locale:\\n";
     test(a3, u3, j3);

     std::wcout << "\\nIn japanese locale:\\n";
     std::setlocale(LC_ALL, "ja_JP.utf8");
     test(a3, u3, j3);
 }

.SH Output:

 In american locale:
           '3'   '三'  '３'
 iswdigit true  false false
 jdigit:  false false false

 In japanese locale:
           '3'   '三'  '３'
 iswdigit true  false false
 jdigit:  false false true

.SH See also

   isdigit(std::locale) checks if a character is classified as a digit by a locale
                        \fI(function template)\fP
   isdigit              checks if a character is a digit
                        \fI(function)\fP
   C documentation for
   iswdigit

  ASCII values         characters      iscntrl  isprint  isspace  isblank  isgraph  ispunct  isalnum  isalpha  isupper  islower  isdigit  isxdigit
      (hex)                            iswcntrl iswprint iswspace iswblank iswgraph iswpunct iswalnum iswalpha iswupper iswlower iswdigit iswxdigit
0 - 8   0x00-0x08 control codes (NUL,  ≠0       0        0        0        0        0        0        0        0        0        0        0
                  etc.)
9       0x09      tab (\\t)             ≠0       0        ≠0       ≠0       0        0        0        0        0        0        0        0
10 - 13 0x0A-0x0D whitespaces          ≠0       0        ≠0       0        0        0        0        0        0        0        0        0
                  (\\n,\\v,\\f,\\r)
14 - 31 0x0E-0x1F control codes        ≠0       0        0        0        0        0        0        0        0        0        0        0
32      0x20      space                0        ≠0       ≠0       ≠0       0        0        0        0        0        0        0        0
33 - 47 0x21-0x2F !"#$%&'()*+,-./      0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
48 - 57 0x30-0x39 0123456789           0        ≠0       0        0        ≠0       0        ≠0       0        0        0        ≠0       ≠0
58 - 64 0x3a-0x40 :;<=>?@              0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
65 - 70 0x41-0x46 ABCDEF               0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        ≠0
71 - 90 0x47-0x5A GHIJKLMNOPQRSTUVWXYZ 0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        0
91 - 96 0x5B-0x60 [\\]^_`               0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
97 -102 0x61-0x66 abcdef               0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        ≠0
103-122 0x67-0x7A ghijklmnopqrstuvwxyz 0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        0
123-126 0x7B-0x7E {|}~                 0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
127     0x7F      backspace character  ≠0       0        0        0        0        0        0        0        0        0        0        0
                  (DEL)
