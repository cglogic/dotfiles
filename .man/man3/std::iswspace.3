.TH std::iswspace 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::iswspace \- std::iswspace

.SH Synopsis
   Defined in header <cwctype>
   int iswspace( wint_t ch );

   Checks if the given wide character is a wide whitespace character as classified by
   the currently installed C locale. In the default locale, the whitespace characters
   are the following:

     * space (0x20, ' ')
     * form feed (0x0c, '\\f')
     * line feed (0x0a, '\\n')
     * carriage return (0x0d, '\\r')
     * horizontal tab (0x09, '\\t')
     * vertical tab (0x0b, '\\v')

.SH Parameters

   ch - wide character

.SH Return value

   Non-zero value if the wide character is a whitespace character, zero otherwise.

.SH Example

   Demonstrates the use of iswspace() with different locales

   
// Run this code

 #include <iostream>
 #include <clocale>
 #include <cwctype>
 void try_with(wchar_t c, const char* loc)
 {
     std::setlocale(LC_ALL, loc);
     std::wcout << "isspace('" << c << "') in " << loc << " locale returned "
                << std::boolalpha << (bool)std::iswspace(c) << '\\n';
 }
 int main()
 {
     wchar_t EM_SPACE = L'\\u2003'; // Unicode character 'EM SPACE'
     try_with(EM_SPACE, "C");
     try_with(EM_SPACE, "en_US.UTF8");
 }

.SH Output:

 isspace(' ') in C locale returned false
 isspace(' ') in en_US.UTF8 locale returned true

.SH See also

   isspace(std::locale) checks if a character is classified as whitespace by a locale
                        \fI(function template)\fP
   isspace              checks if a character is a space character
                        \fI(function)\fP
   C documentation for
   iswspace

  ASCII values         characters      iscntrl  isprint  isspace  isblank  isgraph  ispunct  isalnum  isalpha  isupper  islower  isdigit  isxdigit
      (hex)                            iswcntrl iswprint iswspace iswblank iswgraph iswpunct iswalnum iswalpha iswupper iswlower iswdigit iswxdigit
0 - 8   0x00-0x08 control codes (NUL,  ≠0       0        0        0        0        0        0        0        0        0        0        0
                  etc.)
9       0x09      tab (\\t)             ≠0       0        ≠0       ≠0       0        0        0        0        0        0        0        0
10 - 13 0x0A-0x0D whitespaces          ≠0       0        ≠0       0        0        0        0        0        0        0        0        0
                  (\\n,\\v,\\f,\\r)
14 - 31 0x0E-0x1F control codes        ≠0       0        0        0        0        0        0        0        0        0        0        0
32      0x20      space                0        ≠0       ≠0       ≠0       0        0        0        0        0        0        0        0
33 - 47 0x21-0x2F !"#$%&'()*+,-./      0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
48 - 57 0x30-0x39 0123456789           0        ≠0       0        0        ≠0       0        ≠0       0        0        0        ≠0       ≠0
58 - 64 0x3a-0x40 :;<=>?@              0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
65 - 70 0x41-0x46 ABCDEF               0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        ≠0
71 - 90 0x47-0x5A GHIJKLMNOPQRSTUVWXYZ 0        ≠0       0        0        ≠0       0        ≠0       ≠0       ≠0       0        0        0
91 - 96 0x5B-0x60 [\\]^_`               0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
97 -102 0x61-0x66 abcdef               0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        ≠0
103-122 0x67-0x7A ghijklmnopqrstuvwxyz 0        ≠0       0        0        ≠0       0        ≠0       ≠0       0        ≠0       0        0
123-126 0x7B-0x7E {|}~                 0        ≠0       0        0        ≠0       ≠0       0        0        0        0        0        0
127     0x7F      backspace character  ≠0       0        0        0        0        0        0        0        0        0        0        0
                  (DEL)
