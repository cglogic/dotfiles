.TH std::mem_fun_t,std::mem_fun1_t,std::const_mem_fun_t,std::const_mem_fun1_t 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::mem_fun_t,std::mem_fun1_t,std::const_mem_fun_t,std::const_mem_fun1_t \- std::mem_fun_t,std::mem_fun1_t,std::const_mem_fun_t,std::const_mem_fun1_t

.SH Synopsis
   template< class S, class T >

   class mem_fun_t : public unary_function<T*,S> {
   public:                                                 \fB(1)\fP \fI(until C++17)\fP
   explicit mem_fun_t(S (T::*p)());                            (deprecated since C++11)
   S operator()(T* p) const;

   };
   template< class S, class T >

   class const_mem_fun_t : public unary_function<const
   T*,S> {                                                     \fI(until C++17)\fP
   public:                                                 \fB(2)\fP (deprecated since C++11)
   explicit const_mem_fun_t(S (T::*p)() const);
   S operator()(const T* p) const;

   };
   template< class S, class T, class Arg >

   class mem_fun1_t : public binary_function<T*,A,S> {
   public:                                                 \fB(3)\fP \fI(until C++17)\fP
   explicit mem_fun1_t(S (T::*p)(A));                          (deprecated since C++11)
   S operator()(T* p, A x) const;

   };
   template< class S, class T, class A >

   class const_mem_fun1_t : public binary_function<const
   T*,A,S> {                                                   \fI(until C++17)\fP
   public:                                                 \fB(4)\fP (deprecated since C++11)
   explicit const_mem_fun1_t(S (T::*p)(A) const);
   S operator()(const T* p, A x) const;

   };

   Wrapper around a member function pointer. The class instance whose member function
   to call is passed as a pointer to the operator().

   1) Wraps a non-const member function with no parameters.
   2) Wraps a const member function with no parameters.
   3) Wraps a non-const member function with a single parameter.
   4) Wraps a const member function with a single parameter.

.SH See also

   mem_fun              creates a wrapper from a pointer to member function, callable
   \fI(until C++17)\fP        with a pointer to object
                        \fI(function template)\fP
   mem_fun_ref_t
   mem_fun1_ref_t
   const_mem_fun_ref_t  wrapper for a pointer to nullary or unary member function,
   const_mem_fun1_ref_t callable with a reference to object
   \fI(until C++17)\fP        \fI(class template)\fP
   \fI(until C++17)\fP
   \fI(until C++17)\fP
   \fI(until C++17)\fP
