.TH std::unique_lock::owns_lock 3 "2018.03.28" "http://cppreference.com" "C++ Standard Libary"
.SH NAME
std::unique_lock::owns_lock \- std::unique_lock::owns_lock

.SH Synopsis
   bool owns_lock() const;  \fI(since C++11)\fP

   Checks whether *this owns a locked mutex or not.

.SH Parameters

   \fI(none)\fP

.SH Return value

   true if *this has an associated mutex and has acquired ownership of it, false
   otherwise.

.SH Exceptions

   noexcept specification:
   noexcept

.SH See also

   operator bool tests whether the lock owns its associated mutex
                 \fI(public member function)\fP

.SH Category:

     * unconditionally noexcept

   Hidden categories:

     * Pages with unreviewed unconditional noexcept template
     * Pages with unreviewed noexcept template
